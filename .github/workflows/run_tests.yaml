name: Reusable workflow - test
on:
    workflow_call:
        inputs:
            SLACK_CHANNEL:
                description: "channel for reports"
                required: true
                type: string
            TEST_CONFIG_FILENAME:
                description: "config for test"
                required: true
                type: string
            YANDEX_AUTH_TOKEN:
                description: "token for authed and non payed account"
                required: true
                type: string
        secrets:
            MY_GITHUB_TOKEN:
                description: "token for access to current repo"
                required: true
            SLACK_TOKEN:
                description: "token for access message api"
                required: true
            PROXY_PASSWORD:
                description: "password for proxy"
                required: true
jobs:
    test:
        name: test
        runs-on: [ubuntu-latest]
        defaults:
            run:
                shell: bash
        steps:
            - name: Checkout current repo
              uses: actions/checkout@v2

            - name: Checkout testing repo
              uses: actions/checkout@v2
              with:
                  repository: Zebrainy/e2e-yandex-landing-script
                  path: ./testing

            - name: Setup Node.js
              uses: actions/setup-node@v1
              with:
                  node-version: "16.x"

            - name: Install yarn
              run: npm install -g yarn

            - name: Copy based snapshots folder
              shell: bash
              run: |
                  cp -R app_snapshots ./testing/  2>/dev/null || :

            - name: Convert config to string
              id: convert-config
              run: |
                  echo "TEST_CONFIG=$(cat ${{ inputs.TEST_CONFIG_FILENAME }} | tr -d '\n')" >> $GITHUB_OUTPUT

            - name: Install dependencies
              working-directory: ./testing
              run: |
                  yarn

            - name: Run tests
              id: run_test
              working-directory: ./testing
              run: |
                  yarn cross-env CONFIG_PATH=$GITHUB_WORKSPACE/${{ inputs.TEST_CONFIG_FILENAME }} YANDEX_TOKEN='${{ inputs.YANDEX_AUTH_TOKEN }}' PROXY_PASSWORD='${{secrets.PROXY_PASSWORD}}' yarn test

            - name: Check for first run
              run: echo "IS_FIRST_RUN=$(if [ $(find testing/app_snapshots/* -maxdepth 0 -type d | wc -l)  -gt $(find app_snapshots/* -maxdepth 0 -type d | wc -l) ]; then echo "false"; else echo "true"; fi)" >> $GITHUB_ENV

            - name: Log
              run: |
                  echo ${{ env.IS_FIRST_RUN }}
                  echo $(find testing/app_snapshots/* -maxdepth 0 -type d | wc -l)
                  echo $(find app_snapshots/* -maxdepth 0 -type d | wc -l)
                  ls -la testing/app_snapshots/
                  ls -la app_snapshots/

            - name: Copy updated snapshots back
              if: ${{ !cancelled() && steps.run_test.outcome == 'failure' }}
              run: |
                  pushd ./testing/app_snapshots/
                  rm -rf ./**/base
                  for f in ./*/received/*; do newPath=$(echo "$f" | sed s/received/base/); mkdir -p $(dirname $newPath) && cp -p "$f" "$newPath"; done
                  cp -R . $GITHUB_WORKSPACE/app_snapshots/  2>/dev/null || :

            - name: Get current branch name
              if: ${{ !cancelled() && steps.run_test.outcome == 'failure'}}
              id: get_branch_name
              run: echo "CURRENT_BRANCH=$(echo ${GITHUB_REF##*/})" >> $GITHUB_OUTPUT

            - name: Create pull request
              if: ${{  !cancelled() && steps.run_test.outcome == 'failure' }}
              uses: peter-evans/create-pull-request@v3
              id: pull-request
              with:
                  token: ${{ secrets.MY_GITHUB_TOKEN }}
                  commit-message: "Update snapshots"
                  title: "Add new base snapshots"
                  body: "Update snapshots"
                  committer: GitHub <noreply@github.com>
                  author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
                  branch: "update-snapshots"
                  delete-branch: true
                  base: ${{ steps.get_branch_name.outputs.CURRENT_BRANCH }}
                  add-paths: |
                      ./app_snapshots/**/base/*

            - name: Prepare result
              id: prepare-result
              if: ${{ !cancelled() && steps.run_test.outcome == 'failure' }}
              run: |
                  pushd ./app_snapshots/
                  rm -rf ./**/received
                  rm -rf ./**/base
                  zip -r screenshot-diffs.zip *

            - name: Send report in slack if first run
              if: ${{ !cancelled() && steps.run_test.outcome == 'failure' && env.IS_FIRST_RUN  }}
              uses: Zebrainy/slack-send@v1
              id: send-message-first-run
              with:
                  MESSAGE_TEXT: |
                      *Я.Лендинг*
                      :white_check_mark: Первый запуск тестов прошёл успешно. Скриншоты отправлены <${{steps.pull-request.outputs.pull-request-url}}|пулл реквестом>
                  SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
                  CHANNELS: ${{ inputs.SLACK_CHANNEL }}

            - name: Send report in slack if diff found
              if: ${{  !cancelled() && steps.run_test.outcome == 'failure' && steps.pull-request.outputs.pull-request-url != ''}}
              uses: Zebrainy/slack-send@v1
              id: send-message-diff
              with:
                  MESSAGE_TEXT: |
                      *Я.Лендинг*
                      :smiling_face_with_tear: Упс, тест упал, но я уже создал <${{steps.pull-request.outputs.pull-request-url}}|пулл реквест> с новыми скриншотами.

                      Посмотреть скриншоты можно в комментариях к этому посту:point_down: или по <${{steps.pull-request.outputs.pull-request-url }}/files|ссылке>
                  SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
                  FILENAME: ./app_snapshots/screenshot-diffs.zip
                  CHANNELS: ${{ inputs.SLACK_CHANNEL }}

            - name: Send report in slack if something went wrong
              if: ${{  !cancelled() && steps.run_test.outcome == 'failure' && steps.pull-request.outputs.pull-request-url == ''}}
              uses: Zebrainy/slack-send@v1
              id: send-message-fail-very-bad
              with:
                  MESSAGE_TEXT: |
                      *Я.Лендинг*
                      :smiling_face_with_tear: Упс, тест упал по неизвестной причине.
                      <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|Подробнее>
                  SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
                  CHANNELS: ${{ inputs.SLACK_CHANNEL }}
